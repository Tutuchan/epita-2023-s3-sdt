---
title: "Setup"
format: 
  revealjs:
    smaller: true
---

## Use the course repository

## Clone the repository

- fork this repository
- open a new terminal, go to the folder where you want to clone the fork and clone it

```{.bash}
cd whatever/folder
git clone https://github.com/<your-github-username>/epita-2023-s3-sdt.git
```

- go to the cloned folder

```{.bash}
cd epita-2023-s3-sdt
```

## Install Python

## Install Python for Mac

Install Python **3.10 or 3.11** from the [Python website](https://www.python.org/downloads/).

You can use [pyenv](https://github.com/pyenv/pyenv) instead.

## Install Python for Windows

**You can't use Windows directly in this course.**

Please install Ubuntu from the Windows Store and proceed with the Linux instructions.

## Install Python for Linux

```{.bash}
sudo apt update && sudo apt upgrade -y
sudo apt install software-properties-common -y
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.11 python3.11-venv -y
python3.11 -m ensurepip
```

## Create a virtual environment

- make sure the `python` version is `3.10` or `< 3.11`:

```bash
python --version
```

- create a virtual environment

```{.bash}
python -m venv venv # might need to use python3 here
source venv/bin/activate
# make sure the virtual environment python is activated
which python
# for me, it returns /Users/pformont/tutuchan/courses/epita-2023-s3-sdt/venv/bin/python
```

## Install Airflow

## Pre-requisites

- make sure the `8080` port is available,
- make sure the virtual environment is correctly activated:

```{.bash}
which pip
# should return something like /Users/<your-user>/whatever/folder/epita-2023-s3-sdt/venv/bin/pip
# for me, it returns /Users/pformont/tutuchan/courses/epita-2023-s3-sdt/venv/bin/pip
```

- if it does not, run:

```{.bash}
source venv/bin/activate
```

- read [this documentation](https://airflow.apache.org/docs/apache-airflow/stable/start.html) to install Airflow
- summary:

```{.bash}
AIRFLOW_VERSION=2.8.0
PYTHON_VERSION="$(python --version | cut -d " " -f 2 | cut -d "." -f 1-2)"
CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"

pip install "apache-airflow==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}"
```

## Run Airflow

- run Airflow:

```{.bash}
# still in the same virtual environment
export AIRFLOW_HOME=$(pwd)/airflow
airflow standalone
```

- in the terminal, you should see something like this:

```plain
 webserver | [2023-12-26 09:21:18 +0100] [85451] [INFO] Listening at: http://0.0.0.0:8080 (85451)
[...]
standalone | Airflow is ready
standalone | Login with username: admin  password: VG9yPG6XnTRgQEcW
standalone | Airflow Standalone is for development purposes only. Do not use this in production!
```

- this is the local url, user and password to login to Airflow
- an `airflow` folder should be created with multiple files and folders:
    - you can find the password in `standalone_admin_password.txt`
    - `airflow.cfg` contains the Airflow configuration, we'll use it during the course
- if you can connect to Airflow on the provided URL ([http://0.0.0.0:8080](http://0.0.0.0:8080) by default or [http://localhost:8080](http://localhost:8080)) using the `admin` user and the provided password, you're good to go !

